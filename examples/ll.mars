module llist;

import os "./os";

def Node = struct {
    val: int,
    next: ^mut Node,
};

def List = struct {
    head: ^mut Node,
    tail: ^mut Node,
};

fn new_node(val: int) -> ^mut Node {
    let n: ^mut Node = os::memalloc(sizeof Node);
    n.val = val;
    n.next = null;
    return n;
}

fn append_head(l: ^mut List, new: ^mut Node) {
    if (list.head == null) {
        list.head = new;
        list.tail = new;
        new.next = null;
    } else {
        new.next = list.head;
        list.head = new;
    }
}

fn append_tail(l: ^mut List, new: ^mut Node) {
    if (list.head == null) {
        list.head = new;
        list.tail = new;
    } else {
        list.tail.next = new;
        list.tail = new;
    }
}